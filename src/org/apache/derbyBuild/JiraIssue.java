package org.apache.derbyBuild;

import java.util.List;

/**
 * An issue from JIRA.
 */

public class JiraIssue
{
	  	public static final long NO_RELEASE_NOTE = -1;
	    public static final long MISSING_RELEASE_NOTE = -2;
	    private static final String ATTACHMENT_BASE =
	        "https://issues.apache.org/jira/secure/attachment/";
	    private static final String ATTACHMENT_NAME = "releaseNote.html";
	
	    // States for parsing source from the Derby JIRA SOAP client.
	    private static final int STATE_ADD_RESET = -1;
	    private static final int STATE_ADD_KEY = 0;
	    private static final int STATE_ADD_SUMMARY = 1;
	    private static final int STATE_ADD_FIXVERSIONS = 2;
	    private static final int STATE_ADD_RELEASENOTE = 3;
	
	    // JIRA issue information
	    private String key;
	    private String title;
	    private long releaseNoteAttachmentID = NO_RELEASE_NOTE;
	    private List fixVersions;
	
	    public JiraIssue(String key, String title, List fixVersions,long releaseNoteAttachmentID) 
	    {
	        this.key = key;
	        this.title = title;
	        this.fixVersions = fixVersions;
	        this.releaseNoteAttachmentID = releaseNoteAttachmentID;
	    }

	    /**
	     * Factory method which extracts a list of JiraIssue objects from a data
	     * file generated by the Derby JIRA SOAP client.
	     *
	     * @param source the source file (generated by the Derby JIRA SOAP client)
	     * @return A List of {@code JiraIssue} objects.
	     * @throws Exception if something goes wrong
	     */
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    /**
	     * @return the issue's key (jira number, e.g., 1234)
	     */
	    public String getKey()
	    {
	        return key;
	    }

	    /**
	     * @return the issue's title
	     */
	    public String getTitle() 
	    {
	        return title;
	    }

	    /**
	     * @return the attachment id of the release note
	     */
	    public long getReleaseNoteAttachmentID()
	    {
	        return releaseNoteAttachmentID;
	    }

	    /**
	     * @return true iff this issue has a release note attached
	     */
	    public boolean hasReleaseNote() 
	    {
	        return (releaseNoteAttachmentID != NO_RELEASE_NOTE &&
	                releaseNoteAttachmentID != MISSING_RELEASE_NOTE);
	    }

	    /**
	     * @return true iff this issue is missing a release note
	     */
	    public boolean hasMissingReleaseNote()
	    {
	        return (releaseNoteAttachmentID == MISSING_RELEASE_NOTE);
	    }

	    /**
	     * Predicate for finding out if issue has a given fixVersion.
	     * @param version to test
	     * @return true iff issue has version as fixVersion
	     */
	    public boolean isFixedIn(String version)
	    {
	        return fixVersions.contains(version);
	    }

	    /**
	     * @return URL for this Jira issue
	     */
	    public String getJiraAddress() 
	    {
	        return "https://issues.apache.org/jira/browse/DERBY-" + key;
	    }

	    /**
	     * @return Full URL to the latest release note
	     */
	    public String getReleaseNoteAddress() 
	    {
	        return ATTACHMENT_BASE +
	                releaseNoteAttachmentID + "/" + ATTACHMENT_NAME;
	    }
}
